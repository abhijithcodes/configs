[language-server]
deno = { command = "deno", args = ["lsp"] }
# taplo = { command = "taplo", args = ["lsp", "stdio"] }
vscode-css-language-server = { command = "vscode-css-language-server", args = ["--stdio"], config = { provideFormatter = true, css = { validate = { enable = true } } } }
vscode-html-language-server = { command = "vscode-html-language-server", args = ["--stdio"], config = { provideFormatter = true } }
vscode-json-language-server = { command = "vscode-json-language-server", args = ["--stdio"], config = { provideFormatter = true, json = { validate = { enable = true } } } }
pyright = { command = "pyright-langserver", args = ["--stdio"], config = {} }
clangd = { command = "clangd", args = ["--query-driver=D:/mingw64/bin"] }
ltex-ls = { command = "ltex-ls"}

[language-server.rust-analyzer]
command = "rust-analyzer"

[language-server.gopls]
command = "gopls"

[[language]]
name = "tsx"
language-servers = ["deno"]
auto-format = true

[[language]]
name = "html"
language-servers = ["vscode-html-language-server"]
formatter = { command = 'prettier', args = ["--parser", "html"] }
auto-format = true

[[language]]
name = "css"
language-servers = ["vscode-css-language-server"]
formatter = { command = 'prettier', args = ["--parser", "css"] }
auto-format = true

# [[language]]
# name = "toml"
# language-servers = ["taplo"]
# auto-format = true

[[language]]
name = "json"
language-servers = ["deno"]
auto-format = true

[[language]]
name = "typescript"
language-servers = ["deno"]
auto-format = true

[[language]]
name = "rust"
# scope = "source.rust"
# injection-regex = "rust"
file-types = ["rs"]
roots = ["Cargo.toml", "Cargo.lock"]
auto-format = true
# comment-token = "//"
language-servers = [ "rust-analyzer" ]
# indent = { tab-width = 4, unit = "    " }

[[language]]
name = "go"
scope = "source.go"
injection-regex = "go"
file-types = ["go"]
roots = ["go.work", "go.mod"]
auto-format = true
comment-token = "//"
language-servers = [ "gopls"]
#TODO: gopls needs utf-8 offsets?
indent = { tab-width = 4, unit = "\t" }

[[language]]
name = "json"
scope = "source.json"
injection-regex = "json"
file-types = [
  "json",
  "jsonc",
  "arb",
  "ipynb",
  "geojson",
  "gltf",
  "webmanifest",
  "flake.lock",
  ".babelrc",
  ".bowerrc",
  ".jscrc",
  "js.map",
  "ts.map",
  "css.map",
  ".jslintrc",
  "jsonld",
  ".vuerc",
  "composer.lock",
  ".watchmanconfig"
]
roots = []
language-servers = [ "vscode-json-language-server" ]
auto-format = true
indent = { tab-width = 2, unit = "  " }

[[language]]
name = "python"
# roots = ["pyproject.toml", "setup.py", "Poetry.lock", ".git"]
language-servers = ["pyright"]
auto-format = true
# config = ""

[language.formatter]
command = 'black'
args = ["--quiet", "-"]


[[language]]
name = "cpp"
scope = "source.cpp"
injection-regex = "cpp"
file-types = ["cc", "hh", "c++", "cpp", "hpp", "h", "ipp", "tpp", "cxx", "hxx", "ixx", "txx", "ino", "C", "H", "cu", "cuh", "cppm", "h++", "ii", "inl", { suffix = ".hpp.in" }, { suffix = ".h.in" }]
roots = []
comment-token = "//"
language-servers = [ "clangd" ]
indent = { tab-width = 2, unit = "  " }
auto-format = true

[[grammar]]
name = "cpp"
source = { git = "https://github.com/tree-sitter/tree-sitter-cpp", rev = "670404d7c689be1c868a46f919ba2a3912f2b7ef" }

[[language]]
name = "c"
scope = "source.c"
injection-regex = "c"
file-types = ["c"] #TODO: ["h"]
roots = []
comment-token = "//"
language-servers = [ "clangd" ]
indent = { tab-width = 2, unit = "  " }
auto-format = true

[[grammar]]
name = "c"
source = { git = "https://github.com/tree-sitter/tree-sitter-c", rev = "7175a6dd5fc1cee660dce6fe23f6043d75af424a" }

[[language]]
name = "markdown"
scope = "source.md"
injection-regex = "md|markdown"
file-types = ["md", "markdown", "PULLREQ_EDITMSG", "mkd", "mdwn", "mdown", "markdn", "mdtxt", "mdtext", "workbook"]
language-servers = ["ltex-ls"]
indent = { tab-width = 2, unit = " " }
auto-format = true
