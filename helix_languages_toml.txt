
use-grammars = { only = [ "html"] }

[language-server]
deno-lsp = { command = "deno", args = ["lsp"]}
vscode-css-language-server = { command = "vscode-css-language-server", args = ["--stdio"], config = { provideFormatter = true, css = { validate = { enable = true } } } }
vscode-html-language-server = { command = "vscode-html-language-server", args = ["--stdio"], config = { provideFormatter = true } }
vscode-json-language-server = { command = "vscode-json-language-server", args = ["--stdio"], config = { provideFormatter = true, json = { validate = { enable = true } } } }
pyright = { command = "pyright-langserver", args = ["--stdio"], config = {} }
clangd = { command = "clangd", args = ["--query-driver=D:/mingw64/bin"] }
ltex-ls = { command = "ltex-ls"}
#omnisharp = { command = "OmniSharp", args = [ "--languageserver" ], timeout=50 }
csharp-ls = { command = "csharp-ls", timeout=10000 }
haskell-language-server = { command = "haskell-language-server-wrapper", args = ["--lsp"] }

[language-server.rust-analyzer]
command = "rust-analyzer"

[language-server.gopls]
command = "gopls"

[[language]]
name = "tsx"
language-servers = ["deno-lsp"]
auto-format = true


[[language]]
name = "html"
scope = "text.html.basic"
injection-regex = "html"
file-types = ["html", "htm", "shtml", "xhtml", "xht", "jsp", "asp", "aspx", "jshtm", "volt", "rhtml"]
language-servers = [ "vscode-html-language-server" ]
formatter = { command = 'prettier', args = ["--parser", "html"] }
auto-format = false
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "html"
source = { git = "https://github.com/tree-sitter/tree-sitter-html", rev = "29f53d8f4f2335e61bf6418ab8958dac3282077a" }

[[language]]
name = "css"
scope = "source.css"
injection-regex = "css"
file-types = ["css", "scss"]
language-servers = [ "vscode-css-language-server" ]
auto-format = true
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "css"
source = { git = "https://github.com/tree-sitter/tree-sitter-css", rev = "769203d0f9abe1a9a691ac2b9fe4bb4397a73c51" }

[[language]]
name = "json"
language-servers = ["deno-lsp"]
auto-format = true

[[language]]
name = "typescript"
language-servers = ["deno-lsp"]
auto-format = true

[[language]]
name = "javascript"
language-servers = ["deno-lsp"]
auto-format = true

[[language]]
name = "rust"
# scope = "source.rust"
# injection-regex = "rust"
file-types = ["rs"]
roots = ["Cargo.toml", "Cargo.lock"]
auto-format = true
# comment-token = "//"
language-servers = [ "rust-analyzer" ]
# indent = { tab-width = 4, unit = "    " }

[[language]]
name = "go"
scope = "source.go"
injection-regex = "go"
file-types = ["go"]
roots = ["go.work", "go.mod"]
auto-format = true
comment-token = "//"
language-servers = [ "gopls"]
#TODO: gopls needs utf-8 offsets?
indent = { tab-width = 4, unit = "\t" }

[[grammar]]
name = "go"
source = { git = "https://github.com/tree-sitter/tree-sitter-go", rev = "64457ea6b73ef5422ed1687178d4545c3e91334a" }

[[language]]
name = "gomod"
scope = "source.gomod"
injection-regex = "gomod"
file-types = [{glob = "go.mod"}]
auto-format = true
comment-token = "//"
language-servers = [ "gopls" ]
indent = { tab-width = 4, unit = "\t" }

[[grammar]]
name = "gomod"
source = { git = "https://github.com/camdencheek/tree-sitter-go-mod", rev = "e8f51f8e4363a3d9a427e8f63f4c1bbc5ef5d8d0" }

[[language]]
name = "gotmpl"
scope = "source.gotmpl"
injection-regex = "gotmpl"
file-types = ["gotmpl", "tmpl"]
comment-token = "//"
formatter = { command = 'prettier', args = ["--parser", "html"] }
auto-format = true
language-servers = [ "gopls" ]
indent = { tab-width = 2, unit = " " }

[[grammar]]
name = "gotmpl"
source = { git = "https://github.com/dannylongeuay/tree-sitter-go-template", rev = "395a33e08e69f4155156f0b90138a6c86764c979" }

[[language]]
name = "gowork"
scope = "source.gowork"
injection-regex = "gowork"
file-types = [{glob = "go.work"}]
auto-format = true
comment-token = "//"
language-servers = [ "gopls" ]
indent = { tab-width = 4, unit = "\t" }

[[grammar]]
name = "gowork"
source = { git = "https://github.com/omertuc/tree-sitter-go-work", rev = "6dd9dd79fb51e9f2abc829d5e97b15015b6a8ae2" }

[[language]]
name = "json"
scope = "source.json"
injection-regex = "json"
file-types =  ["json","jsonc", "arb","ipynb","geojson"]
roots = []
language-servers = [ "vscode-json-language-server" ]
auto-format = true
indent = { tab-width = 2, unit = "  " }

[[language]]
name = "python"
# roots = ["pyproject.toml", "setup.py", "Poetry.lock", ".git"]
language-servers = ["pyright"]
auto-format = true
# config = ""

[language.formatter]
command = "ruff"
args = ["format", "--quiet", "-"] 

[[language]]
name = "cpp"
scope = "source.cpp"
injection-regex = "cpp"
file-types = ["cc", "hh", "c++", "cpp", "hpp", "h", "ipp", "tpp", "cxx", "hxx", "ixx", "txx", "ino", "C", "H", "cu", "cuh", "cppm", "h++", "ii", "inl", { glob = ".hpp.in" }, { glob = ".h.in" }]
roots = []
comment-token = "//"
language-servers = [ "clangd" ]
indent = { tab-width = 2, unit = "  " }
auto-format = true

[[grammar]]
name = "cpp"
source = { git = "https://github.com/tree-sitter/tree-sitter-cpp", rev = "670404d7c689be1c868a46f919ba2a3912f2b7ef" }

[[language]]
name = "c"
scope = "source.c"
injection-regex = "c"
file-types = ["c"] #TODO: ["h"]
roots = []
comment-token = "//"
language-servers = [ "clangd" ]
indent = { tab-width = 2, unit = "  " }
auto-format = true

[[grammar]]
name = "c"
source = { git = "https://github.com/tree-sitter/tree-sitter-c", rev = "7175a6dd5fc1cee660dce6fe23f6043d75af424a" }

[[language]]
name = "markdown"
scope = "source.md"
injection-regex = "md|markdown"
file-types = ["md", "markdown", "PULLREQ_EDITMSG", "mkd", "mdwn", "mdown", "markdn", "mdtxt", "mdtext", "workbook"]
language-servers = ["ltex-ls"]
indent = { tab-width = 2, unit = " " }
auto-format = true


[[language]]
name = "make"
scope = "source.make"
file-types = ["Makefile", "makefile", "make", "mk", "mak", "GNUmakefile", "OCamlMakefile"]
shebangs = ["make", "gmake"]
injection-regex = "(make|makefile|Makefile|mk)"
comment-token = "#"
indent = { tab-width = 4, unit = "\t" }

[[grammar]]
name = "make"
source = { git = "https://github.com/alemuller/tree-sitter-make", rev = "a4b9187417d6be349ee5fd4b6e77b4172c6827dd" }


[[language]]
name = "c-sharp"
scope = "source.csharp"
injection-regex = "c-?sharp"
file-types = ["cs", "csx", "cake"]
roots = ["sln", "csproj"]
comment-token = "//"
indent = { tab-width = 4, unit = "\t" }
language-servers = [ "csharp-ls"]
auto-format = true

[language.debugger]
name = "netcoredbg"
transport = "tcp"
command = "netcoredbg"
args = [ "--interpreter=vscode" ]
port-arg = "--server={}"

[[language.debugger.templates]]
name = "launch"
request = "launch"
completion = [ { name = "path to dll", completion = "filename" } ]
args = { type = "coreclr", console = "internalConsole", internalConsoleOptions = "openOnSessionStart", program = "{0}" }

[[language.debugger.templates]]
name = "attach"
request = "attach"
completion = [ "pid" ]
args = { processId = "{0}" }

[[grammar]]
name = "c-sharp"
source = { git = "https://github.com/tree-sitter/tree-sitter-c-sharp", rev = "5b60f99545fea00a33bbfae5be956f684c4c69e2" }


[[language]]
name = "htmldjango"
scope = "source.htmldjango"
file-types = []
roots = []
auto-format = true
formatter = { command = "djlint", args = ["-", "--reformat", "--quiet"] }

[[grammar]]
name = "htmldjango"
source = { git = "https://github.com/interdependence/tree-sitter-htmldjango" , rev = "b2dba02eddab66be669022320273d0dfe1ff923d" }


[[language]]
name = "haskell"
scope = "source.haskell"
injection-regex = "haskell"
file-types = ["hs", "hs-boot"]
roots = ["Setup.hs", "stack.yaml", "cabal.project"]
comment-token = "--"
language-servers = [ "haskell-language-server" ]
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "haskell"
source = { git = "https://github.com/tree-sitter/tree-sitter-haskell", rev = "d7ac98f49e3ed7e17541256fe3881a967d7ffdd3" }


[[language]]
name = "cabal"
scope = "source.cabal"
file-types = [ "cabal" ]
roots = ["cabal.project", "Setup.hs"]
indent = { tab-width = 2, unit = "  " }
comment-token = "--"
language-servers = [ "haskell-language-server" ]
