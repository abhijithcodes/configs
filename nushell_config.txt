# config.nu
#
# Installed by:
# version = "0.102.0"
#
# This file is used to override default Nushell settings, define
# (or import) custom commands, or run any other startup tasks.
# See https://www.nushell.sh/book/configuration.html
#
# This file is loaded after env.nu and before login.nu
#
# You can open this file in your default editor using:
# config nu
#
# See `help config nu` for more options
#
# You can remove these comments if you want or leave
# them for future reference.

# set up the default config editor
$env.EDITOR = "hx"

# adding starship support
mkdir ($nu.data-dir | path join "vendor/autoload")
starship init nu | save -f ($nu.data-dir | path join "vendor/autoload/starship.nu")

#adding zoxide support
source ~/.zoxide.nu

#adding support for duplicate tabs in windows terminal

def before_prompt [] {
    # Get current path
    let current_path = $env.PWD
    
    # Construct the prompt string with ANSI escape sequences
    # ESC character is \u{001b} or \x1b
    let esc = "\u{001b}"
    let bell = "\u{0007}"  # bell character
    
    mut prompt = $"($esc)]9;12$bell"
    
    # Add the current path if we're in the filesystem
    if ($current_path | path exists) {
        let path_prompt = $"($esc)]9;9;\"($current_path | str replace -a '\"' '\\\"')\"($esc)\\"
        $prompt = $prompt + $path_prompt
    }
    
    # Write to terminal without newline
    print -n $prompt
}

$env.config = {
  hooks: {
    pre_prompt: [
      before_prompt
    ]
  }
}

#remove welcome message
$env.config.show_banner = false

#custom functions
# git commit custom function
def gimmit [message: string] {
  git add .
  git commit -m $message
}

# git push custom function
def gish [message: string] {
  git add .
  git commit -m $message
  git push -u origin main
}

# go up directories
alias up = cd ..

#neovim alias
alias vim = nvim

# measure the time taken for a command to run
# a closure can be passed to the function using {}
# eg usage: time-it { cargo run }
def time-it [block: closure] {
  let start = (date now)
  do $block
  let end = (date now)
  let duration = ($end - $start)
  print $"Command took ($duration) to execute."
}

#edit the mytheme file in helix theme config
def edit-helix-theme [] {
  hx ~\AppData\Roaming\helix\themes\mytheme.toml
}

def hx-no-lsp [path: string] {
  hx --config D:/helix-no-lsp/config.toml $path
}
